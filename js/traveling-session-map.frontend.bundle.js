/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/***/ (function(module) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\n\n//# sourceURL=webpack://traveling-session-map/./node_modules/@babel/runtime/helpers/asyncToGenerator.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/***/ (function(module) {

eval("function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\n\n//# sourceURL=webpack://traveling-session-map/./node_modules/@babel/runtime/helpers/defineProperty.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/***/ (function(module) {

eval("function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\n\n//# sourceURL=webpack://traveling-session-map/./node_modules/@babel/runtime/helpers/interopRequireDefault.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\n\n//# sourceURL=webpack://traveling-session-map/./node_modules/@babel/runtime/regenerator/index.js?");

/***/ }),

/***/ "./js/map.js":
/*!*******************!*
  !*** ./js/map.js ***!
  \*******************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\"));\n\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Map \n */\n;\n\n(function (w, $) {\n  'use strict';\n  /**\n   * Mapbox token\n   */\n\n  mapboxgl.accessToken = 'pk.eyJ1IjoidmluY2Vuem8tbSIsImEiOiJja2RyN3lyaGIxYms3MnJ0YWQzY285b2hjIn0.ABcpXPdCt_vOXrLx0ox1bg';\n  /**\n   * Global Variables \n   */\n\n  var SelectState = null;\n  var GeoCoderFields = [];\n  var CountrySelected = [];\n  var FavoriteCity = {};\n  var FavCityFilterMarker = [];\n  var FavCityFilterCache = {};\n  var FavCityListContainer = null;\n  /**\n   * Map\n   */\n\n  var MapToolsWrap = $('.map-tools-container');\n  var MapCenter = [-53.842, 34.691];\n  var MapZoom = 1.95;\n  var MapLayers = [{\n    id: 'WorldCountries',\n    type: 'fill',\n    source: 'states',\n    layout: {\n      'visibility': 'visible'\n    },\n    paint: {\n      \"fill-color\": [\"case\", [\"boolean\", [\"feature-state\", \"hover\"], false], \"#0071A4\", \"#ffffff\"],\n      \"fill-opacity\": [\"case\", [\"boolean\", [\"feature-state\", \"hover\"], false], 0.8, 0.001]\n    },\n    'fill-opacity': 0.4\n  }];\n  var Map = new mapboxgl.Map({\n    container: 'traveling-session-map',\n    style: 'mapbox://styles/mapbox/streets-v11',\n    center: MapCenter,\n    zoom: MapZoom\n  });\n\n  var LoadStateMapData = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var Result;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return $.get(TRSS_MAP_OBJ.mapbox_world_countries_json_url);\n\n            case 2:\n              Result = _context.sent;\n              return _context.abrupt(\"return\", JSON.parse(Result));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function LoadStateMapData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var MapInit = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n      var StateData, SelectCountry;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              /**\n               * Set\n               */\n              FavCityListContainer = $('#Fav-City-List');\n              /**\n               * Get data\n               */\n\n              _context2.next = 3;\n              return LoadStateMapData();\n\n            case 3:\n              StateData = _context2.sent;\n\n              /**\n               * Add Source\n               */\n              Map.addSource('states', {\n                'type': 'geojson',\n                'data': StateData\n              });\n              /**\n               * Add Map Layer\n               */\n\n              MapLayers.forEach(function (param) {\n                Map.addLayer(_objectSpread({}, param), 'natural-line-label');\n              });\n              /**\n               * Select Country\n               */\n\n              SelectCountry = function SelectCountry(e) {\n                var StateID = e.features[0].id;\n\n                var _inc = CountrySelected.includes(StateID);\n\n                if (true == _inc) {\n                  CountrySelected.splice(CountrySelected.indexOf(StateID), 1);\n                  Map.setFeatureState({\n                    source: 'states',\n                    id: StateID\n                  }, {\n                    hover: !_inc\n                  });\n                } else {\n                  CountrySelected.push(StateID);\n                  Map.setFeatureState({\n                    source: 'states',\n                    id: StateID\n                  }, {\n                    hover: !_inc\n                  });\n                }\n\n                $('#Map-State').find(\"option[value=\\\"\".concat(StateID, \"\\\"]\")).prop('selected', !_inc);\n                $('#Map-State').trigger('change');\n                UpdateTotalCountriesNumber();\n              };\n\n              Map.on('click', 'WorldCountries', SelectCountry);\n              /**\n               * Load map data init\n               */\n\n              _context2.next = 10;\n              return LoadInit();\n\n            case 10:\n              /**\n               * Filter \n               */\n              $('._fav-filter-item').on('click', FavCityFilter);\n              /**\n               * Hide loader\n               */\n\n              $('.loader').hide();\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function MapInit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  Map.on('load', MapInit);\n  /**\n   * Load data init\n   */\n\n  var LoadDataInit = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n      var Country, Favorite, CacheDataMap_String, CacheDataMap, Result;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              Country = [];\n              Favorite = {};\n              /**\n               * load data by localStorage\n               */\n\n              CacheDataMap_String = localStorage.getItem('CacheDataMap');\n\n              if (CacheDataMap_String) {\n                CacheDataMap = JSON.parse(CacheDataMap_String);\n                Country = CacheDataMap.CountrySelected;\n                Favorite = CacheDataMap.FavoriteCity;\n              }\n              /**\n               * Load data by DB\n               */\n\n\n              _context3.next = 6;\n              return $.ajax({\n                type: 'POST',\n                url: TRSS_MAP_OBJ.ajax_url,\n                data: {\n                  action: 'tsm_ajax_load_user_map_data'\n                },\n                error: function error(e) {\n                  console.log(e);\n                }\n              });\n\n            case 6:\n              Result = _context3.sent;\n\n              if (Result.data.CountrySelected) {\n                Country = Result.data.CountrySelected.map(function (StateID) {\n                  return parseInt(StateID);\n                });\n              }\n\n              if (Result.data.FavoriteCity) {\n                Favorite = Result.data.FavoriteCity;\n              }\n\n              return _context3.abrupt(\"return\", {\n                Country: Country,\n                Favorite: Favorite\n              });\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function LoadDataInit() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var LoadInit = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n      var _yield$LoadDataInit, Country, Favorite;\n\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return LoadDataInit();\n\n            case 2:\n              _yield$LoadDataInit = _context4.sent;\n              Country = _yield$LoadDataInit.Country;\n              Favorite = _yield$LoadDataInit.Favorite;\n              CountrySelected = Country;\n              FavoriteCity = Favorite; // Load country selected\n\n              if (CountrySelected.length) {\n                // Update select\n                $('select[name=states][multiple=multiple]').val(CountrySelected).trigger('change'); // Update map\n\n                CountrySelected.map(function (StateID) {\n                  Map.setFeatureState({\n                    source: 'states',\n                    id: StateID\n                  }, {\n                    hover: true\n                  });\n                });\n              } // Load favorite\n\n\n              if (Object.keys(FavoriteCity).length) {\n                // console.log( FavoriteCity )\n                Object.keys(FavoriteCity).map(function (key) {\n                  var data = FavoriteCity[key];\n                  $(\".__mapbox-geocode-field-container[data-item-key=\".concat(key, \"]\")).trigger('__MakeMarkerDefault:MyFav', [data]);\n                });\n              } // Update number state selected\n\n\n              UpdateTotalCountriesNumber();\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function LoadInit() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  /**\n   * Map Tools control\n   */\n\n\n  var MapToolsControlTab = function MapToolsControlTab() {\n    MapToolsWrap.on({\n      '__onChange:Tab': function __onChangeTab(e, func) {\n        MapToolsWrap.onChangeTabCallback = MapToolsWrap.onChangeTabCallback || [];\n        MapToolsWrap.onChangeTabCallback.push(func);\n      }\n    });\n    MapToolsWrap.on('click', '.tab-heading [data-tab-name]', function (e) {\n      e.preventDefault();\n      var Name = $(this).data('tab-name');\n      $(this).addClass('active').siblings().removeClass('active');\n      MapToolsWrap.find(\".tab-body .__tab-item[data-tab-body-name=\".concat(Name, \"]\")).addClass('__is-active').siblings().removeClass('__is-active');\n      /**\n       * Callback \n       */\n\n      if (MapToolsWrap.onChangeTabCallback && MapToolsWrap.onChangeTabCallback.length) {\n        MapToolsWrap.onChangeTabCallback.map(function (func) {\n          func.call(null, Name);\n        });\n      }\n    });\n    return MapToolsWrap;\n  };\n  /**\n   * Changed tab is My Travels\n   */\n\n\n  var isMyTravelsTabHandle = function isMyTravelsTabHandle() {\n    Map.setLayoutProperty('WorldCountries', 'visibility');\n    $('.__mapbox-geocode-field-container').each(function () {\n      var Marker = $(this).data('marker');\n      if (!Marker) return;\n      $(Marker._element).css('display', 'block');\n    });\n    /**\n     * hiden Fav Marker\n     */\n\n    FavCityFilterMarker.map(function (Marker) {\n      $(Marker._element).css('display', 'none');\n    });\n    $('.mapboxgl-popup').hide();\n  };\n  /**\n   * Changed tab is Global Trends\n   */\n\n\n  var isGlobalTrendsTabHandle = function isGlobalTrendsTabHandle() {\n    Map.setLayoutProperty('WorldCountries', 'visibility', 'none');\n    $('.__mapbox-geocode-field-container').each(function () {\n      var Marker = $(this).data('marker');\n      if (!Marker) return;\n      $(Marker._element).css('display', 'none');\n    });\n    /**\n     * hiden Fav Marker\n     */\n\n    FavCityFilterMarker.map(function (Marker) {\n      $(Marker._element).css('display', 'block');\n    });\n    $('.mapboxgl-popup').show();\n  };\n\n  var SelectMapStateUI = function SelectMapStateUI() {\n    SelectState = $('#Map-State').bsMultiSelect({\n      setSelected: SelectStateHandle\n    });\n    $('#Map-State').on('change', function () {\n      SelectState.bsMultiSelect('Update');\n    }).trigger('change');\n  };\n\n  var MakeMarker = function MakeMarker(data, dataUI) {\n    // let el = document.createElement( 'div' )\n    // el.className = 'marker'\n    // el.style.backgroundImage = `url(${ dataUI.Icon })`\n    // el.style.backgroundSize = `100%`\n    // el.style.width = 40 + 'px'\n    // el.style.height = 40 + 'px'\n    var el = BuildMarkerUI({\n      icon: dataUI.Icon\n    });\n    return new mapboxgl.Marker(el).setLngLat(data.geometry.coordinates).addTo(Map);\n  };\n\n  var GeoCoderFieldHandle = function GeoCoderFieldHandle() {\n    var _onResult = function _onResult(e, c) {\n      var Marker = MakeMarker(e.result, {\n        Icon: c.data('icon')\n      });\n      var TaxSlug = c.data('tax-slug');\n      var Key = c.data('item-key');\n      var OldMarker = c.data('marker');\n      if (OldMarker) OldMarker.remove();\n      c.data('marker', Marker); // Save Fav City\n\n      var FavCity = {\n        tax_slug: TaxSlug,\n        place_name: e.result.place_name,\n        geometry: e.result.geometry\n      };\n      FavoriteCity[Key] = FavCity;\n    };\n\n    var _onClear = function _onClear(e, c) {\n      var Key = c.data('item-key');\n      var Marker = c.data('marker');\n      if (!Marker) return;\n      delete FavoriteCity[Key];\n      Marker.remove();\n    };\n\n    $('.__mapbox-geocode-field-container').each(function () {\n      var Container = $(this);\n      var Geocoder = new MapboxGeocoder({\n        mapboxgl: mapboxgl,\n        accessToken: mapboxgl.accessToken,\n        placeholder: 'Enter city',\n        types: 'place',\n        marker: false,\n        limit: 1\n      });\n      $(this).html(Geocoder.onAdd(Map));\n      Geocoder.on('result', function (e) {\n        _onResult(e, Container);\n      });\n      Geocoder.on('clear', function (e) {\n        _onClear(e, Container);\n      });\n      Container.on({\n        '__MakeMarkerDefault:MyFav': function __MakeMarkerDefaultMyFav(e, GeocoderData) {\n          console.log(GeocoderData);\n\n          var _Marker = MakeMarker(GeocoderData, {\n            Icon: Container.data('icon')\n          });\n\n          Container.data('marker', _Marker);\n          Container.find('input.mapboxgl-ctrl-geocoder--input').val(GeocoderData.place_name);\n        }\n      });\n      Container.data('geocoder-obj', Geocoder);\n      GeoCoderFields.push(Geocoder);\n    });\n  };\n  /**\n   * State select field handle \n   * \n   * @param {*} option \n   * @param {*} value \n   */\n\n\n  var SelectStateHandle = function SelectStateHandle(option, value) {\n    var StateID = parseInt(option.value);\n\n    if (value) {\n      CountrySelected.push(StateID);\n    } // add\n    else {\n        CountrySelected.splice(CountrySelected.indexOf(StateID), 1);\n      } // remove\n\n\n    Map.setFeatureState({\n      source: 'states',\n      id: StateID\n    }, {\n      hover: value\n    });\n    option.selected = value;\n    UpdateTotalCountriesNumber();\n  };\n  /**\n   * Filter Fav City\n   */\n\n\n  var DoFavCityFilter = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(Opts) {\n      var params, Result;\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              params = jQuery.extend({\n                Slug: ''\n              }, Opts);\n              /**\n               * Load to from cache\n               */\n\n              if (!FavCityFilterCache[params.Slug]) {\n                _context5.next = 3;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", FavCityFilterCache[params.Slug]);\n\n            case 3:\n              _context5.next = 5;\n              return $.ajax({\n                type: 'POST',\n                url: TRSS_MAP_OBJ.ajax_url,\n                data: {\n                  action: 'tsm_ajax_get_fav_city_by_cat',\n                  data: _objectSpread({}, params)\n                }\n              });\n\n            case 5:\n              Result = _context5.sent;\n              FavCityFilterCache[params.Slug] = Result;\n              return _context5.abrupt(\"return\", Result);\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function DoFavCityFilter(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var BuildFavCityListUI = function BuildFavCityListUI(FavItem, Maker, index) {\n    var HtmlInner = \"\\n    <span class=\\\"__inc-num\\\">\".concat(index + 1, \"</span>\\n    <div class=\\\"fav-entry\\\">\\n      <h4 class=\\\"city-name\\\">\").concat(FavItem._place_name, \"</h4>\\n      <div class=\\\"entry-meta\\\">\\n        <div class=\\\"__by\\\">by \").concat(FavItem._user_id.display_name, \"</div>\\n        <div class=\\\"__geometry\\\">\").concat(FavItem.geometry.coordinates.join(', '), \"</div>\\n      </div>\\n    </div>\");\n    var el = $('<div>', {\n      \"class\": '__fav-city-item',\n      html: HtmlInner\n    });\n    FavCityListContainer.append(el);\n  };\n\n  var BuildMarkerUI = function BuildMarkerUI(opts) {\n    var _opts = $.extend({\n      icon: '',\n      size: [40, 40]\n    }, opts);\n\n    var el = document.createElement('div');\n    el.className = 'marker';\n    el.style.backgroundImage = \"url(\".concat(_opts.icon, \")\");\n    el.style.backgroundSize = \"100%\";\n    el.style.width = _opts.size[0] + 'px';\n    el.style.height = _opts.size[1] + 'px';\n    return el;\n  };\n\n  var FavCityShowing = function FavCityShowing(data) {\n    data.map(function (item, index) {\n      var el = BuildMarkerUI({\n        icon: item._icon\n      }); // create the popup\n\n      var popup = new mapboxgl.Popup({\n        offset: 20\n      }).setText(\"\\n      \".concat(item._place_name, \" \\u2014 by \").concat(item._user_id.display_name));\n      var Marker = new mapboxgl.Marker(el).setLngLat(item.geometry.coordinates).setPopup(popup).addTo(Map);\n      FavCityFilterMarker.push(Marker);\n      BuildFavCityListUI(item, Marker, index);\n    });\n  };\n\n  var FavCityFilter = /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(e) {\n      var button, _ref7, Slug, Result;\n\n      return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              e.preventDefault();\n              button = $(this);\n              _ref7 = [button.val()], Slug = _ref7[0];\n              button.addClass('__is-active').siblings().removeClass('__is-active');\n              _context6.next = 6;\n              return DoFavCityFilter({\n                Slug: Slug\n              });\n\n            case 6:\n              Result = _context6.sent;\n\n              if (Result.success) {\n                _context6.next = 10;\n                break;\n              }\n\n              alert('Error!');\n              return _context6.abrupt(\"return\");\n\n            case 10:\n              /**\n               * Remove avaiable marker old\n               */\n              if (FavCityFilterMarker.length) {\n                FavCityFilterMarker.map(function (M) {\n                  M.remove();\n                });\n              }\n              /**\n               * Clear list fav\n               */\n\n\n              FavCityListContainer.empty();\n              /**\n               * Add new marker\n               */\n\n              FavCityShowing(Result.data);\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    return function FavCityFilter(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  /**\n   * Update total countries number UI\n   */\n\n\n  var UpdateTotalCountriesNumber = function UpdateTotalCountriesNumber() {\n    $('#d1').html(CountrySelected.length);\n  };\n\n  var MapTools = function MapTools() {\n    MapToolsControlTab();\n    SelectMapStateUI();\n    GeoCoderFieldHandle();\n    /**\n     * After change tab handle\n     */\n\n    MapToolsWrap.trigger('__onChange:Tab', [function (TabName) {\n      switch (TabName) {\n        case 'my-travels':\n          isMyTravelsTabHandle();\n          break;\n\n        case 'global-trends':\n          isGlobalTrendsTabHandle();\n          break;\n      }\n    }]);\n  };\n\n  var Save = function Save() {\n    var _SaveLocal = /*#__PURE__*/function () {\n      var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(button) {\n        var CacheDataMap;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                CacheDataMap = {\n                  CountrySelected: CountrySelected,\n                  FavoriteCity: FavoriteCity\n                };\n                localStorage.setItem('CacheDataMap', JSON.stringify(CacheDataMap));\n                button.text('SAVING...');\n                _context7.next = 5;\n                return _SaveDB(CacheDataMap);\n\n              case 5:\n                button.text('SAVE');\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function _SaveLocal(_x3) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    var _SaveDB = /*#__PURE__*/function () {\n      var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(Data) {\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return $.ajax({\n                  type: 'POST',\n                  url: TRSS_MAP_OBJ.ajax_url,\n                  data: {\n                    action: 'tsm_ajax_save_map_data',\n                    data: Data\n                  },\n                  error: function error(e) {\n                    console.log(e);\n                  }\n                });\n\n              case 2:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function _SaveDB(_x4) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    $('#saveButton').on('click', function (e) {\n      e.preventDefault();\n      var button = $(this);\n\n      _SaveLocal(button);\n    });\n  };\n  /**\n   * Ready\n   */\n\n\n  var Ready = function Ready() {\n    MapTools();\n    Save();\n  };\n  /**\n   * DOM Ready\n   */\n\n\n  $(Ready);\n})(window, jQuery);\n\nmodule.exports = {};\n\n//# sourceURL=webpack://traveling-session-map/./js/map.js?");

/***/ }),

/***/ "./js/toggle-ui.js":
/*!*************************!*
  !*** ./js/toggle-ui.js ***!
  \*************************/
/***/ (function(module) {

"use strict";
eval("\n\n/**\n * Toggle UI Script\n */\n;\n\n(function (w, $) {\n  'use trict';\n\n  var ToggleUI = function ToggleUI(el, opts) {\n    var _self = $(el);\n\n    var _opts = $.extend({}, opts);\n\n    var isHandle = false;\n\n    _self.on({\n      '__open:ToggleUI': function __openToggleUI(e) {\n        _self.find('.__toggle-content').stop(true, true).slideDown('slow', function () {\n          _self.addClass('__is-open');\n\n          isHandle = false;\n        });\n      },\n      '__close:ToggleUI': function __closeToggleUI(e) {\n        _self.find('.__toggle-content').stop(true, true).slideUp('slow', function () {\n          _self.removeClass('__is-open');\n\n          isHandle = false;\n        });\n      }\n    });\n\n    _self.on('click', '.__toggle-heading', function (e) {\n      e.preventDefault();\n      if (isHandle == true) return;\n\n      if (_self.hasClass('__is-open')) {\n        _self.trigger('__close:ToggleUI');\n      } else {\n        console.log('is close');\n\n        _self.trigger('__open:ToggleUI');\n      }\n\n      isHandle = true;\n    });\n  };\n\n  var Ready = function Ready() {\n    $('.__is-toggle').each(function () {\n      new ToggleUI(this);\n    });\n  };\n\n  $(Ready);\n})(window, jQuery);\n\nmodule.exports = {};\n\n//# sourceURL=webpack://traveling-session-map/./js/toggle-ui.js?");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ (function(module) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : 0\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n\n\n//# sourceURL=webpack://traveling-session-map/./node_modules/regenerator-runtime/runtime.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
!function() {
"use strict";
/*!********************!*
  !*** ./js/main.js ***!
  \********************/
eval("\n\n__webpack_require__(/*! ./map */ \"./js/map.js\");\n\n__webpack_require__(/*! ./toggle-ui */ \"./js/toggle-ui.js\");\n\n//# sourceURL=webpack://traveling-session-map/./js/main.js?");
}();
/******/ })()
;